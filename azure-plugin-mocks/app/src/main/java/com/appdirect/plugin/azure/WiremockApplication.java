/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.appdirect.plugin.azure;

import lombok.extern.slf4j.Slf4j;

import com.github.tomakehurst.wiremock.WireMockServer;
import com.github.tomakehurst.wiremock.common.ClasspathFileSource;
import com.github.tomakehurst.wiremock.common.FileSource;
import com.github.tomakehurst.wiremock.core.WireMockConfiguration;
import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;

@Slf4j
public class WiremockApplication {
    public static void main(String... args) {
        final int port = wiremockPort();
        log.info("Starting wiremock on port={}", port);
        FileSource fileSource = new ClasspathFileSource("wiremock");
        WireMockConfiguration configuration = WireMockConfiguration.options().port(port)
                .fileSource(fileSource)
                .extensions(ResponseTemplateTransformer.builder()
                        .global(true)
                        .maxCacheEntries(0L)
                        .build());
        WireMockServer wireMockServer = new WireMockServer(configuration);
        log.info("Configured {} configuration files.", wireMockServer.listAllStubMappings().getMappings().size());
        wireMockServer.start();
    }

    private static int wiremockPort() {
        final int defaultPort = 9876;
        String port;
        try {
            port = System.getProperty("app.connector.wiremock.port");
            return Integer.parseInt(port);
        } catch (Exception exception) {
            log.warn("app.connector.wiremock.port property not configured. Using default port={}", defaultPort);
            return defaultPort;
        }
    }
}
